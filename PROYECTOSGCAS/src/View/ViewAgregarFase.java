/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.ControllerEntregable;
import Controller.ControllerFase;
import Model.Entregable;
import Model.Fase;
import Model.Metodologia;
import java.awt.HeadlessException;
import java.awt.Point;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Christian
 */
public class ViewAgregarFase extends javax.swing.JDialog {

    Metodologia metodologia;
    Fase fase;
    Entregable entregable;    
    ControllerFase controllerFase = new ControllerFase();
    ControllerEntregable controllerEntregable = new ControllerEntregable();
    List<Fase> listaFase;
    List<Entregable> listaEntregable;
    DefaultComboBoxModel defaultComboBoxModel;
    DefaultTableModel defaultTableModelfase;
    DefaultTableModel defaultTableModelentregable;
    TableRowSorter<TableModel> rowSorter;
    TableRowSorter<TableModel> rowSorter2;
    ArrayList<Integer> cantidadEntregables;
    /**
     * Creates new form ViewAgregarFase2
     */
    public ViewAgregarFase(java.awt.Frame parent, boolean modal, Metodologia metodologia) throws SQLException {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        this.metodologia = metodologia;        
        lblTituloMetodologia.setText(this.metodologia.getMetNombre());       
        defaultComboBoxModel = (DefaultComboBoxModel) cbxFaseEstado.getModel();    
        this.defaultTableModelentregable = (DefaultTableModel) tbllistaEntregable.getModel();      
        tbllistaEntregable.getTableHeader().setReorderingAllowed(false);
        this.defaultTableModelfase = (DefaultTableModel) tbllistaFase.getModel();      
        tbllistaFase.getTableHeader().setReorderingAllowed(false);
        tbllistaFase.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent mouseEvent) {
                JTable table =(JTable) mouseEvent.getSource();
                Point point = mouseEvent.getPoint();
                int row = table.rowAtPoint(point);
                if (mouseEvent.getClickCount() == 2 && table.getSelectedRow() != -1) {  
                    txtBuscarEntregable.setEnabled(false);
                    txtEntregableNombre.setEnabled(true);                    
                    txtEntregableNombre.setText("");
                    btnAgregarEntregable.setEnabled(true);
                    btnQuitarEntregable.setEnabled(true);
                    fase = new Fase((int) tbllistaFase.getValueAt(tbllistaFase.getSelectedRow(), 0), 
                            tbllistaFase.getValueAt(tbllistaFase.getSelectedRow(), 1).toString(),
                            defaultComboBoxModel.getIndexOf(tbllistaFase.getValueAt(tbllistaFase.getSelectedRow(), 3))                                
                            );
                    try{
                        controlEntregableListar();
                    }catch(Exception e){}
                    btnEditarFase.setEnabled(true);
                    txtFaseNombre.setText(fase.getFasNombre());
                    cbxFaseEstado.setSelectedIndex(fase.getFasEstado());
                }
            }      
        });
        tbllistaEntregable.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent mouseEvent) {
                JTable table =(JTable) mouseEvent.getSource();
                Point point = mouseEvent.getPoint();
                int row = table.rowAtPoint(point);
                if (mouseEvent.getClickCount() == 1 && table.getSelectedRow() != -1) {                      
                    entregable = new Entregable((int) tbllistaEntregable.getValueAt(tbllistaEntregable.getSelectedRow(), 0), 
                            tbllistaEntregable.getValueAt(tbllistaEntregable.getSelectedRow(), 1).toString());
                }
            }      
        });
        
        
        controlFaseListar();
        
    }

    ViewAgregarFase(Object object, boolean b) {
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblTituloMetodologia = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbllistaEntregable = new rojerusan.RSTableMetro1();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbllistaFase = new rojerusan.RSTableMetro1();
        txtEntregableNombre = new RSMaterialComponent.RSTextFieldMaterial();
        cbxFaseEstado = new RSMaterialComponent.RSComboBoxMaterial();
        txtFaseNombre = new RSMaterialComponent.RSTextFieldMaterial();
        btnCerrarFase = new rojeru_san.rsbutton.RSButtonGradiente();
        btnEditarFase = new rojeru_san.rsbutton.RSButtonGradiente();
        btnAgregarEntregable = new rojeru_san.rsbutton.RSButtonGradiente();
        btnQuitarEntregable = new rojeru_san.rsbutton.RSButtonGradiente();
        txtBuscarEntregable = new RSMaterialComponent.RSTextFieldMaterial();
        txtBuscarFase = new RSMaterialComponent.RSTextFieldMaterial();
        btnAgregarFase = new rojeru_san.rsbutton.RSButtonGradiente();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblTituloMetodologia.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblTituloMetodologia.setText("JDIALOG");
        jPanel1.add(lblTituloMetodologia, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 250, 30));

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 51));
        jLabel11.setText("Informacion de Fase");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, 200, 30));

        tbllistaEntregable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "Nombre de Entregable"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbllistaEntregable.setIntercellSpacing(new java.awt.Dimension(1, 1));
        tbllistaEntregable.setName(""); // NOI18N
        jScrollPane2.setViewportView(tbllistaEntregable);
        if (tbllistaEntregable.getColumnModel().getColumnCount() > 0) {
            tbllistaEntregable.getColumnModel().getColumn(0).setMinWidth(50);
            tbllistaEntregable.getColumnModel().getColumn(0).setPreferredWidth(50);
            tbllistaEntregable.getColumnModel().getColumn(0).setMaxWidth(50);
            tbllistaEntregable.getColumnModel().getColumn(1).setResizable(false);
        }

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 450, 610, 150));

        tbllistaFase.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "Nombre de Fase", "Q Entregables", "Estado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbllistaFase.setIntercellSpacing(new java.awt.Dimension(1, 1));
        tbllistaFase.setName(""); // NOI18N
        jScrollPane3.setViewportView(tbllistaFase);
        if (tbllistaFase.getColumnModel().getColumnCount() > 0) {
            tbllistaFase.getColumnModel().getColumn(0).setMinWidth(50);
            tbllistaFase.getColumnModel().getColumn(0).setPreferredWidth(50);
            tbllistaFase.getColumnModel().getColumn(0).setMaxWidth(50);
        }

        jPanel1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 200, 610, 140));

        txtEntregableNombre.setForeground(new java.awt.Color(0, 0, 51));
        txtEntregableNombre.setEnabled(false);
        txtEntregableNombre.setPlaceholder("Nombre de Entregable");
        jPanel1.add(txtEntregableNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 350, 330, 40));

        cbxFaseEstado.setForeground(new java.awt.Color(0, 0, 51));
        cbxFaseEstado.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Estado", "Activo", "Inactivo" }));
        cbxFaseEstado.setEnabled(false);
        cbxFaseEstado.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jPanel1.add(cbxFaseEstado, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 100, 180, -1));

        txtFaseNombre.setForeground(new java.awt.Color(0, 0, 51));
        txtFaseNombre.setEnabled(false);
        txtFaseNombre.setPlaceholder("Nombre de Fase");
        jPanel1.add(txtFaseNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 410, 40));

        btnCerrarFase.setText("Cerrar");
        btnCerrarFase.setColorPrimario(new java.awt.Color(0, 0, 51));
        btnCerrarFase.setColorSecundarioHover(new java.awt.Color(0, 160, 255));
        btnCerrarFase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarFaseActionPerformed(evt);
            }
        });
        jPanel1.add(btnCerrarFase, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 610, 270, 40));

        btnEditarFase.setText("Editar");
        btnEditarFase.setColorPrimario(new java.awt.Color(0, 0, 51));
        btnEditarFase.setColorSecundarioHover(new java.awt.Color(0, 160, 255));
        btnEditarFase.setEnabled(false);
        btnEditarFase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarFaseActionPerformed(evt);
            }
        });
        jPanel1.add(btnEditarFase, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 40, 130, 40));

        btnAgregarEntregable.setText("Agregar");
        btnAgregarEntregable.setColorPrimario(new java.awt.Color(0, 0, 51));
        btnAgregarEntregable.setColorSecundarioHover(new java.awt.Color(0, 160, 255));
        btnAgregarEntregable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarEntregableActionPerformed(evt);
            }
        });
        jPanel1.add(btnAgregarEntregable, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 350, 130, 40));

        btnQuitarEntregable.setText("Quitar");
        btnQuitarEntregable.setColorPrimario(new java.awt.Color(0, 0, 51));
        btnQuitarEntregable.setColorSecundarioHover(new java.awt.Color(0, 160, 255));
        btnQuitarEntregable.setEnabled(false);
        btnQuitarEntregable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuitarEntregableActionPerformed(evt);
            }
        });
        jPanel1.add(btnQuitarEntregable, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 350, 130, -1));

        txtBuscarEntregable.setForeground(new java.awt.Color(0, 0, 51));
        txtBuscarEntregable.setPlaceholder("Ingrese texto de entregable a buscar...");
        txtBuscarEntregable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarEntregableKeyReleased(evt);
            }
        });
        jPanel1.add(txtBuscarEntregable, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 400, 610, 40));

        txtBuscarFase.setForeground(new java.awt.Color(0, 0, 51));
        txtBuscarFase.setPlaceholder("Ingrese texto de fase a buscar...");
        txtBuscarFase.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarFaseKeyReleased(evt);
            }
        });
        jPanel1.add(txtBuscarFase, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, 610, 40));

        btnAgregarFase.setText("Nuevo");
        btnAgregarFase.setColorPrimario(new java.awt.Color(0, 0, 51));
        btnAgregarFase.setColorSecundarioHover(new java.awt.Color(0, 160, 255));
        btnAgregarFase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarFaseActionPerformed(evt);
            }
        });
        jPanel1.add(btnAgregarFase, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 40, 130, 40));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 665, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 672, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCerrarFaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarFaseActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCerrarFaseActionPerformed

    private void btnEditarFaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarFaseActionPerformed
        switch (btnEditarFase.getText()) {
            case "Cancelar":
                txtFaseNombre.setEnabled(false);
                cbxFaseEstado.setEnabled(false);
                btnAgregarFase.setText("Nuevo");
                btnEditarFase.setText("Editar");
                txtBuscarFase.setEnabled(true);
                tbllistaFase.setEnabled(true);
                tbllistaFase.clearSelection();
                txtBuscarEntregable.setEnabled(false);
                txtEntregableNombre.setEnabled(true);                    
                txtEntregableNombre.setText("");
                btnAgregarEntregable.setEnabled(true);
                btnQuitarEntregable.setEnabled(true);
                break;
            case "Editar":
                btnEditarFase.setText("Guardar");
                btnAgregarFase.setText("Cancelar");
                tbllistaFase.setEnabled(false);
                btnEditarFase.setEnabled(true); 
                txtFaseNombre.setEnabled(true);
                cbxFaseEstado.setEnabled(true);  
                break;
            case "Guardar":                
                metodologia.setMetNombre(txtFaseNombre.getText());
                metodologia.setMetEstado(cbxFaseEstado.getSelectedIndex());
                tbllistaFase.setEnabled(true);
                try {
                    fase.setFasNombre(txtFaseNombre.getText());
                    fase.setFasEstado(cbxFaseEstado.getSelectedIndex());
                    fase.setMETODOLOGIAmetId(metodologia);
                    controlFaseEditar(fase);
                    JOptionPane.showMessageDialog(jPanel1, "Operación realizada con éxito.","Fase",JOptionPane.INFORMATION_MESSAGE);
                    controlFaseListar();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, "Error al realizar la operación solicitada.","Fase", JOptionPane.WARNING_MESSAGE);                    
                } 
                txtFaseNombre.setEnabled(false);
                cbxFaseEstado.setEnabled(false);
                btnAgregarFase.setText("Nuevo");
                btnEditarFase.setText("Editar");
                txtFaseNombre.setText("");
                cbxFaseEstado.setSelectedIndex(0);
                break;
            default:
                break;
        }
        
        
    }//GEN-LAST:event_btnEditarFaseActionPerformed

    private void btnAgregarEntregableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarEntregableActionPerformed
        try {
            entregable = new Entregable(0, txtEntregableNombre.getText());
            entregable.setFase(fase);
            controlEntregableGuardar(entregable);
            JOptionPane.showMessageDialog(jPanel1, "Operación realizada con éxito.","Entregable",JOptionPane.INFORMATION_MESSAGE);            
            txtEntregableNombre.setText("");
            controlEntregableListar();
        } catch (SQLException ex) {
            Logger.getLogger(ViewAgregarFase.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Error al realizar la operación solicitada.","Entregable", JOptionPane.WARNING_MESSAGE);  
        }
    }//GEN-LAST:event_btnAgregarEntregableActionPerformed

    private void btnQuitarEntregableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuitarEntregableActionPerformed
        int opcionSeleccionada = JOptionPane.showConfirmDialog(this,
                "¿Seguro que desea elimnar el entregable?", "Entregable",
                JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);
        if(opcionSeleccionada == 0){
            try {
                controlEntregableEliminar(entregable);
                JOptionPane.showMessageDialog(jPanel1, "Operación realizada con éxito.","Entregable",JOptionPane.INFORMATION_MESSAGE);
                controlFaseListar();
                controlEntregableListar();
            } catch (SQLException ex) {
                Logger.getLogger(ViewAgregarFase.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "Error al realizar la operación solicitada.","Entregable", JOptionPane.WARNING_MESSAGE);  
            }
        }
    }//GEN-LAST:event_btnQuitarEntregableActionPerformed

    private void txtBuscarEntregableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarEntregableKeyReleased
        String busquedaEntregable = txtBuscarEntregable.getText();
        if (busquedaEntregable.trim().length() == 0) {
           rowSorter2.setRowFilter(null);
        } else {
           rowSorter2.setRowFilter(RowFilter.regexFilter("(?i)" + busquedaEntregable));
        }
    }//GEN-LAST:event_txtBuscarEntregableKeyReleased

    private void txtBuscarFaseKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarFaseKeyReleased
        String busquedaFase = txtBuscarFase.getText();
        if (busquedaFase.trim().length() == 0) {
           rowSorter.setRowFilter(null);
        } else {
           rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + busquedaFase));
        }
    }//GEN-LAST:event_txtBuscarFaseKeyReleased

    private void btnAgregarFaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarFaseActionPerformed
        switch (btnAgregarFase.getText()) {
            case "Nuevo":
                txtFaseNombre.setEnabled(true);
                cbxFaseEstado.setEnabled(true);
                btnEditarFase.setEnabled(true);
                btnAgregarFase.setText("Agregar");
                btnEditarFase.setText("Cancelar");                
                txtBuscarFase.setEnabled(false);
                tbllistaFase.setEnabled(false);
                tbllistaFase.clearSelection();             
                break;
            case "Agregar":
                try{
                    fase = new Fase(0, txtFaseNombre.getText(), cbxFaseEstado.getSelectedIndex());
                    fase.setMETODOLOGIAmetId(metodologia);
                    controlFaseGuardar(fase);
                    JOptionPane.showMessageDialog(jPanel1, "Operación realizada con éxito.","Fase",JOptionPane.INFORMATION_MESSAGE);    
                    controlFaseListar();
                    txtFaseNombre.setText("");
                    cbxFaseEstado.setSelectedIndex(0);  
                }catch(HeadlessException | SQLException ex){
                    JOptionPane.showMessageDialog(null, "Error al realizar la operación solicitada.","Fase", JOptionPane.WARNING_MESSAGE);
                }   
                break;                
            case "Cancelar":
                tbllistaFase.setEnabled(true);
                break;
            default:
                break;
        }
    }//GEN-LAST:event_btnAgregarFaseActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewAgregarFase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewAgregarFase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewAgregarFase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewAgregarFase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ViewAgregarFase dialog = new ViewAgregarFase(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private rojeru_san.rsbutton.RSButtonGradiente btnAgregarEntregable;
    private rojeru_san.rsbutton.RSButtonGradiente btnAgregarFase;
    private rojeru_san.rsbutton.RSButtonGradiente btnCerrarFase;
    private rojeru_san.rsbutton.RSButtonGradiente btnEditarFase;
    private rojeru_san.rsbutton.RSButtonGradiente btnQuitarEntregable;
    private RSMaterialComponent.RSComboBoxMaterial cbxFaseEstado;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblTituloMetodologia;
    private rojerusan.RSTableMetro1 tbllistaEntregable;
    private rojerusan.RSTableMetro1 tbllistaFase;
    private RSMaterialComponent.RSTextFieldMaterial txtBuscarEntregable;
    private RSMaterialComponent.RSTextFieldMaterial txtBuscarFase;
    private RSMaterialComponent.RSTextFieldMaterial txtEntregableNombre;
    private RSMaterialComponent.RSTextFieldMaterial txtFaseNombre;
    // End of variables declaration//GEN-END:variables

    private void controlFaseListar() throws SQLException {
        int j = 1;
        defaultTableModelfase.getDataVector().removeAllElements();
        listaFase = controllerFase.controlFaseListar(metodologia.getMetId());
        cantidadEntregables = controllerEntregable.contabilizarEntregables(metodologia);
        rowSorter = new TableRowSorter<>(tbllistaFase.getModel());
        tbllistaFase.setRowSorter(rowSorter);
        for(int i = 0; i < listaFase.size(); i++){
            defaultTableModelfase.addRow(new Object[]{
                listaFase.get(i).getFasId(),
                listaFase.get(i).getFasNombre(),
                cantidadEntregables.get(i+j),
                cbxFaseEstado.getItemAt(listaFase.get(i).getFasEstado())
            });
            j++;
        }
    }

    private void controlEntregableListar() throws SQLException {
        defaultTableModelentregable.getDataVector().removeAllElements();
        listaEntregable = controllerEntregable.controlEntregableListar(fase.getFasId()); 
        rowSorter2 = new TableRowSorter<>(tbllistaEntregable.getModel());
        tbllistaEntregable.setRowSorter(rowSorter2);                
        for(int i = 0; i < listaEntregable.size(); i++){
            defaultTableModelentregable.addRow(new Object[]{
                listaEntregable.get(i).getEntId(),
                listaEntregable.get(i).getEntNombre()
            });
        }      
        controlFaseListar();
    }
    
    private void controlFaseGuardar(Fase fase) throws SQLException {
        controllerFase.controlFaseGuardar(fase);
    }

    private void controlFaseEditar(Fase fase) throws SQLException {
        controllerFase.controlFaseEditar(fase);
    }
    
    private void controlEntregableGuardar(Entregable entregable) throws SQLException {
        controllerEntregable.controlEntregableGuardar(entregable);
    }

    private void controlEntregableEliminar(Entregable entregable) throws SQLException {
        controllerEntregable.controlEntregableEliminar(entregable);
    }
}
