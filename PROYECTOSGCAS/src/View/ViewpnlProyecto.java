/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.ControllerMetodologia;
import Controller.ControllerProyecto;
import Controller.ControllerUsuario;
import Controller.ControllerUsuarioProyecto;
import Model.Metodologia;
import Model.Proyecto;
import Model.Usuario;
import java.awt.Point;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.SQLException;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author ACER
 */
public class ViewpnlProyecto extends javax.swing.JPanel {
    
    ControllerProyecto controllerProyecto = new ControllerProyecto();
    ControllerMetodologia controllerMetodologia = new ControllerMetodologia();
    ControllerUsuario controllerUsuario = new ControllerUsuario();
    ControllerUsuarioProyecto controllerUsuarioProyecto = new ControllerUsuarioProyecto();
    Proyecto proyecto;
    Usuario usuario;
    List<Proyecto> listaProyecto;
    List<Metodologia> listaMetodologia;
    List<Usuario> listaUsuario;
    DefaultTableModel defaultTableModel;
    TableRowSorter<TableModel> rowSorter;
    java.util.Date fechaRegistro = java.sql.Date.valueOf(LocalDate.now());
     ArrayList<Integer> cantidadMiembros;
    
    public ViewpnlProyecto() throws SQLException {        
        initComponents();
        controlMetodologiaListar();
        controlUsuarioListar();
        this.defaultTableModel = (DefaultTableModel) tbllistaProyecto.getModel();
        tbllistaProyecto.getTableHeader().setReorderingAllowed(false);
        controlMetodologiaListar();
        controlProyectoListar();
        tbllistaProyecto.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent mouseEvent) {
                JTable table =(JTable) mouseEvent.getSource();
                Point point = mouseEvent.getPoint();
                int row = table.rowAtPoint(point);
                if (mouseEvent.getClickCount() == 2 && table.getSelectedRow() != -1) {  
                    proyecto = new Proyecto();     
                    insertarMetodologiaFormulario();
                }
            }      
        });        
    }

/**
     * Creates new form pnlProyecto
     */
        /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rSButtonMetro3 = new rsbuttom.RSButtonMetro();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtBuscarProyecto = new RSMaterialComponent.RSTextFieldMaterial();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbllistaProyecto = new rojerusan.RSTableMetro1();
        rSPanelMaterial1 = new RSMaterialComponent.RSPanelMaterial();
        jLabel2 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        lblProyectoCodigo = new javax.swing.JLabel();
        txtProyectoNombre = new RSMaterialComponent.RSTextFieldMaterial();
        txtProyectoDescripcion = new RSMaterialComponent.RSTextFieldMaterial();
        cbxProyectoMetodologia = new RSMaterialComponent.RSComboBoxMaterial();
        cbxProyectoJefe = new RSMaterialComponent.RSComboBoxMaterial();
        jLabel8 = new javax.swing.JLabel();
        lblProyectoFecha = new javax.swing.JLabel();
        cbxProyectoEstado = new RSMaterialComponent.RSComboBoxMaterial();
        btnAgregarProyecto = new rojeru_san.rsbutton.RSButtonGradiente();
        btnEditarProyecto = new rojeru_san.rsbutton.RSButtonGradiente();
        btnAgregarMiembrosProyecto = new rojeru_san.rsbutton.RSButtonGradiente();
        btnSeleccionarEntregables = new rojeru_san.rsbutton.RSButtonGradiente();

        rSButtonMetro3.setBackground(new java.awt.Color(0, 0, 51));
        rSButtonMetro3.setText("Editar");
        rSButtonMetro3.setColorNormal(new java.awt.Color(0, 0, 51));
        rSButtonMetro3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSButtonMetro3ActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setText("Gestionar Proyecto");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 320, 40));

        txtBuscarProyecto.setForeground(new java.awt.Color(0, 0, 51));
        txtBuscarProyecto.setPlaceholder("Ingrese texto a buscar...");
        txtBuscarProyecto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscarProyectoActionPerformed(evt);
            }
        });
        txtBuscarProyecto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarProyectoKeyReleased(evt);
            }
        });
        jPanel1.add(txtBuscarProyecto, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 320, 1010, 40));

        tbllistaProyecto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nombre de Proyecto", "Jefe designado", "Medotologia", "Q Miembros", "Fecha de Registro", "Estado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbllistaProyecto.setIntercellSpacing(new java.awt.Dimension(1, 1));
        tbllistaProyecto.setName(""); // NOI18N
        jScrollPane2.setViewportView(tbllistaProyecto);
        if (tbllistaProyecto.getColumnModel().getColumnCount() > 0) {
            tbllistaProyecto.getColumnModel().getColumn(0).setMinWidth(45);
            tbllistaProyecto.getColumnModel().getColumn(0).setPreferredWidth(45);
            tbllistaProyecto.getColumnModel().getColumn(0).setMaxWidth(45);
        }

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 370, 1010, 170));

        rSPanelMaterial1.setBackground(new java.awt.Color(255, 255, 255));
        rSPanelMaterial1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Informaci√≥n de Proyecto");
        rSPanelMaterial1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 26, -1, -1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 112, 192));
        jLabel9.setText("Codigo:");
        rSPanelMaterial1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, 60, 40));

        lblProyectoCodigo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblProyectoCodigo.setForeground(new java.awt.Color(0, 0, 51));
        rSPanelMaterial1.add(lblProyectoCodigo, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 50, 70, 40));

        txtProyectoNombre.setForeground(new java.awt.Color(0, 0, 51));
        txtProyectoNombre.setPlaceholder("Nombre");
        rSPanelMaterial1.add(txtProyectoNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 50, 310, 40));

        txtProyectoDescripcion.setForeground(new java.awt.Color(0, 0, 51));
        txtProyectoDescripcion.setPlaceholder("Descripcion");
        rSPanelMaterial1.add(txtProyectoDescripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 480, 60));

        cbxProyectoMetodologia.setForeground(new java.awt.Color(0, 0, 51));
        cbxProyectoMetodologia.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione Metodologia" }));
        cbxProyectoMetodologia.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        rSPanelMaterial1.add(cbxProyectoMetodologia, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 50, 200, -1));

        cbxProyectoJefe.setForeground(new java.awt.Color(0, 0, 51));
        cbxProyectoJefe.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione Jefe de Proyecto" }));
        cbxProyectoJefe.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cbxProyectoJefe.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cbxProyectoJefeFocusGained(evt);
            }
        });
        rSPanelMaterial1.add(cbxProyectoJefe, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 120, 340, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 112, 192));
        jLabel8.setText("Fecha:");
        rSPanelMaterial1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 50, 50, 30));

        lblProyectoFecha.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblProyectoFecha.setForeground(new java.awt.Color(0, 0, 51));
        rSPanelMaterial1.add(lblProyectoFecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 50, 160, 30));

        cbxProyectoEstado.setForeground(new java.awt.Color(0, 0, 51));
        cbxProyectoEstado.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Estado", "Activo", "Inactivo" }));
        cbxProyectoEstado.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        rSPanelMaterial1.add(cbxProyectoEstado, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 120, 100, -1));

        btnAgregarProyecto.setText("Nuevo");
        btnAgregarProyecto.setColorPrimario(new java.awt.Color(0, 0, 51));
        btnAgregarProyecto.setColorSecundarioHover(new java.awt.Color(0, 160, 255));
        btnAgregarProyecto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarProyectoActionPerformed(evt);
            }
        });
        rSPanelMaterial1.add(btnAgregarProyecto, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 180, 140, 35));

        btnEditarProyecto.setText("Editar");
        btnEditarProyecto.setColorPrimario(new java.awt.Color(0, 0, 51));
        btnEditarProyecto.setColorSecundarioHover(new java.awt.Color(0, 160, 255));
        btnEditarProyecto.setEnabled(false);
        btnEditarProyecto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarProyectoActionPerformed(evt);
            }
        });
        rSPanelMaterial1.add(btnEditarProyecto, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 180, 140, 35));

        btnAgregarMiembrosProyecto.setText("Agregar Miembros");
        btnAgregarMiembrosProyecto.setColorPrimario(new java.awt.Color(0, 0, 51));
        btnAgregarMiembrosProyecto.setColorSecundarioHover(new java.awt.Color(0, 160, 255));
        btnAgregarMiembrosProyecto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarMiembrosProyectoActionPerformed(evt);
            }
        });
        rSPanelMaterial1.add(btnAgregarMiembrosProyecto, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 180, 150, 35));

        btnSeleccionarEntregables.setText("Seleccionar Entregables");
        btnSeleccionarEntregables.setColorPrimario(new java.awt.Color(0, 0, 51));
        btnSeleccionarEntregables.setColorSecundarioHover(new java.awt.Color(0, 160, 255));
        btnSeleccionarEntregables.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeleccionarEntregablesActionPerformed(evt);
            }
        });
        rSPanelMaterial1.add(btnSeleccionarEntregables, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 180, 200, 35));

        jPanel1.add(rSPanelMaterial1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, 1010, 240));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1058, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 563, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void rSButtonMetro3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSButtonMetro3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rSButtonMetro3ActionPerformed

    private void cbxProyectoJefeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cbxProyectoJefeFocusGained
        cbxProyectoJefe.setSelectedItem("");       
    }//GEN-LAST:event_cbxProyectoJefeFocusGained

    private void btnAgregarProyectoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarProyectoActionPerformed
        switch (btnAgregarProyecto.getText()) {
            case "Nuevo":
                //limpiarControles();
                //habilitarControles();
                btnAgregarProyecto.setText("Agregar");
                /*btnEditarMetodologia.setText("Cancelar");
                txtBuscarMetodologia.setEnabled(false);
                tbllistaMetodologia.setEnabled(false);
                tbllistaMetodologia.clearSelection();*/
                fechaRegistro = java.sql.Date.valueOf(LocalDate.now());
                lblProyectoFecha.setText(fechaRegistro.toString());
                break;
            case "Agregar":
                proyecto = new Proyecto(0, txtProyectoNombre.getText(), txtProyectoDescripcion.getText(), cbxProyectoEstado.getSelectedIndex());
                proyecto.setMetodologia(listaMetodologia.get(cbxProyectoMetodologia.getSelectedIndex()-1));
                proyecto.setUSUARIOusuId(listaUsuario.get(cbxProyectoJefe.getSelectedIndex()-1));
                proyecto.setProFechaInicio(fechaRegistro);
                try {
                    controlProyectoGuardar(proyecto);
                    JOptionPane.showMessageDialog(jPanel1, "Operaci√≥n realizada con √©xito.","Proyecto",JOptionPane.INFORMATION_MESSAGE);
                    lblProyectoCodigo.setText("");
                    lblProyectoFecha.setText("");                    
                    controlProyectoListar();
                    txtBuscarProyecto.setEnabled(true);
                } catch (SQLException ex) {
                    Logger.getLogger(ViewpnlProyecto.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(null, "Error al realizar la operaci√≥n solicitada.","Proyecto", JOptionPane.WARNING_MESSAGE);
                }                
                //deshabilitarControles();
                btnAgregarProyecto.setText("Nuevo");
                btnEditarProyecto.setText("Editar");
              break;
            case "Cancelar":
                /*deshabilitarControles();
                insertarMetodologiaFormulario();
                tbllistaMetodologia.setEnabled(true);*/
            break;
            default:
            break;
        }
    }//GEN-LAST:event_btnAgregarProyectoActionPerformed

    private void btnEditarProyectoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarProyectoActionPerformed
        switch (btnEditarProyecto.getText()) {
            case "Cancelar":
            /*deshabilitarControles();
            limpiarControles();
            tbllistaMetodologia.setEnabled(true);*/
            break;
            case "Editar":
            /*btnEditarProyecto.setText("Guardar");
            btnAgregarMetodologia.setText("Cancelar");
            tbllistaMetodologia.setEnabled(false);
            habilitarControles();*/
            break;
            case "Guardar":
            /*metodologia.setMetNombre(txtMetodologiaNombre.getText());
            metodologia.setMetEstado(cbxMetodologiaEstado.getSelectedIndex());
            tbllistaMetodologia.setEnabled(true);
            try {
                controlMetodologiaEditar(metodologia);
                JOptionPane.showMessageDialog(jPanel1, "Operaci√≥n realizada con √©xito.","Metodologia",JOptionPane.INFORMATION_MESSAGE);
                controlMetodologiaListar();
                limpiarControles();
                deshabilitarControles();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Error al realizar la operaci√≥n solicitada.","Metodologia", JOptionPane.WARNING_MESSAGE);
            } */  break;
            default:
            break;
        }
    }//GEN-LAST:event_btnEditarProyectoActionPerformed

    private void txtBuscarProyectoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscarProyectoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBuscarProyectoActionPerformed

    private void txtBuscarProyectoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarProyectoKeyReleased
        String busquedaUsuario = txtBuscarProyecto.getText();
        if (busquedaUsuario.trim().length() == 0) {
            rowSorter.setRowFilter(null);
        } else {
            rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + busquedaUsuario));
        }
    }//GEN-LAST:event_txtBuscarProyectoKeyReleased

    private void btnAgregarMiembrosProyectoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarMiembrosProyectoActionPerformed
        if(!(txtProyectoNombre.getText().equals(""))){
            try {
                ViewAgregarMiembro viewAgregarMiembro = new ViewAgregarMiembro(null, true, proyecto, listaUsuario);
                viewAgregarMiembro.setVisible(true);
            } catch (SQLException ex) {
                Logger.getLogger(ViewpnlProyecto.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnAgregarMiembrosProyectoActionPerformed

    private void btnSeleccionarEntregablesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeleccionarEntregablesActionPerformed
        try {
            // TODO add your handling code here:
            ViewEntregableProyecto frm = new ViewEntregableProyecto(null,true, proyecto);
            frm.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(ViewpnlProyecto.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSeleccionarEntregablesActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private rojeru_san.rsbutton.RSButtonGradiente btnAgregarMiembrosProyecto;
    private rojeru_san.rsbutton.RSButtonGradiente btnAgregarProyecto;
    private rojeru_san.rsbutton.RSButtonGradiente btnEditarProyecto;
    private rojeru_san.rsbutton.RSButtonGradiente btnSeleccionarEntregables;
    private RSMaterialComponent.RSComboBoxMaterial cbxProyectoEstado;
    private RSMaterialComponent.RSComboBoxMaterial cbxProyectoJefe;
    private RSMaterialComponent.RSComboBoxMaterial cbxProyectoMetodologia;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblProyectoCodigo;
    private javax.swing.JLabel lblProyectoFecha;
    private rsbuttom.RSButtonMetro rSButtonMetro3;
    private RSMaterialComponent.RSPanelMaterial rSPanelMaterial1;
    private rojerusan.RSTableMetro1 tbllistaProyecto;
    private RSMaterialComponent.RSTextFieldMaterial txtBuscarProyecto;
    private RSMaterialComponent.RSTextFieldMaterial txtProyectoDescripcion;
    private RSMaterialComponent.RSTextFieldMaterial txtProyectoNombre;
    // End of variables declaration//GEN-END:variables

    private void insertarMetodologiaFormulario() {
        for(int i = 0; i < listaProyecto.size(); i++){
            if(Objects.equals((Integer) tbllistaProyecto.getValueAt(tbllistaProyecto.getSelectedRow(), 0), listaProyecto.get(i).getProId())){
                proyecto = listaProyecto.get(i);
                lblProyectoCodigo.setText(proyecto.getProId().toString());
                txtProyectoNombre.setText(proyecto.getProNombre());
                cbxProyectoMetodologia.setSelectedItem(proyecto.getMetodologia().getMetNombre());
                lblProyectoFecha.setText(proyecto.getProFechaInicio().toString());
                txtProyectoDescripcion.setText(proyecto.getProDescripcion());
                cbxProyectoJefe.setSelectedItem(proyecto.getUSUARIOusuId().getUsuNombres() + " " + proyecto.getUSUARIOusuId().getUsuApellidos());
                cbxProyectoEstado.setSelectedIndex(proyecto.getProEstado());
                break;
            }
        }         
    }
    
    private void controlMetodologiaListar() throws SQLException {
        listaMetodologia = controllerMetodologia.controlMetodologiaListar();
        for(int i = 0; i < listaMetodologia.size(); i++){
            cbxProyectoMetodologia.addItem(listaMetodologia.get(i).getMetNombre());
        }        
    }  
    
    private void controlUsuarioListar() throws SQLException {
        listaUsuario = controllerUsuario.controlUsuarioListar();
        for(int i = 0; i < listaUsuario.size(); i++){
            cbxProyectoJefe.addItem(listaUsuario.get(i).getUsuNombres() + " " + listaUsuario.get(i).getUsuApellidos());
        }        
    }

    private void controlProyectoGuardar(Proyecto proyecto) throws SQLException {
        controllerProyecto.controlProyectoGuardar(proyecto);
    }

    private void controlProyectoListar() throws SQLException {
        int k = 1;
        defaultTableModel.getDataVector().removeAllElements();
        listaProyecto = controllerProyecto.controlProyectoListar();
        cantidadMiembros = controllerUsuarioProyecto.contabilizarMiembros();
        rowSorter = new TableRowSorter<>(tbllistaProyecto.getModel());
        tbllistaProyecto.setRowSorter(rowSorter);
        for(int i = 0; i < listaProyecto.size(); i++){
            for(int j = 0; j < listaUsuario.size(); j++){
                if(Objects.equals(listaUsuario.get(j).getUsuId(), listaProyecto.get(i).getUSUARIOusuId().getUsuId())){
                    listaProyecto.get(i).setUSUARIOusuId(listaUsuario.get(j));
                    break;
                }
            }
            for(int j = 0; j < listaMetodologia.size(); j++){
                if(Objects.equals(listaMetodologia.get(j).getMetId(), listaProyecto.get(i).getMetodologia().getMetId())){
                    listaProyecto.get(i).setMetodologia(listaMetodologia.get(j));
                    break;
                }
            }            
            defaultTableModel.addRow(new Object[]{
                listaProyecto.get(i).getProId(),
                listaProyecto.get(i).getProNombre(),
                listaProyecto.get(i).getUSUARIOusuId().getUsuNombres() + " " + listaProyecto.get(i).getUSUARIOusuId().getUsuApellidos(),
                listaProyecto.get(i).getMetodologia().getMetNombre(),
                cantidadMiembros.get(i+k),
                listaProyecto.get(i).getProFechaInicio(),
                cbxProyectoEstado.getItemAt(listaProyecto.get(i).getProEstado())                
            });
            k++;
        }
    }

}
